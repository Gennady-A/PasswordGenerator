# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PasswordGenerator.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtWidgets import QApplication, QWidget
from PyQt5.QtGui import QIcon
import random


class Ui_Dialog(QWidget):
    def __init__(self):
        super().__init__()
        self.setObjectName("Dialog")
        self.resize(700, 300)
        self.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.lineEdit = QtWidgets.QLineEdit(self)
        self.lineEdit.setGeometry(QtCore.QRect(10, 30, 461, 50))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.lineEdit.setReadOnly(True)
        self.lineEdit.setObjectName("lineEdit")
        self.checkBox = QtWidgets.QCheckBox(self)
        self.checkBox.setGeometry(QtCore.QRect(509, 130, 181, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox.setFont(font)
        self.checkBox.setStyleSheet("color: rgb(255, 255, 255);")
        self.checkBox.setObjectName("checkBox")
        self.checkBox_2 = QtWidgets.QCheckBox(self)
        self.checkBox_2.setGeometry(QtCore.QRect(509, 70, 181, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_2.setFont(font)
        self.checkBox_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox_3 = QtWidgets.QCheckBox(self)
        self.checkBox_3.setGeometry(QtCore.QRect(510, 10, 181, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_3.setFont(font)
        self.checkBox_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.checkBox_3.setObjectName("checkBox_3")
        self.horizontalSlider = QtWidgets.QSlider(self)
        self.horizontalSlider.setGeometry(QtCore.QRect(140, 130, 291, 30))
        self.horizontalSlider.setMaximum(20)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(16, 122, 111, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(255, 255, 255);")
        self.label.setObjectName("label")
        self.line = QtWidgets.QFrame(self)
        self.line.setGeometry(QtCore.QRect(480, 0, 8, 501))
        self.line.setStyleSheet("color: rgb(255, 255, 255);\n"
"background-color: rgb(255, 255, 255);")
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self)
        self.line_2.setGeometry(QtCore.QRect(-10, 105, 491, 6))
        self.line_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.checkBox_4 = QtWidgets.QCheckBox(self)
        self.checkBox_4.setGeometry(QtCore.QRect(510, 190, 181, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.checkBox_4.setFont(font)
        self.checkBox_4.setStyleSheet("color: rgb(255, 255, 255);")
        self.checkBox_4.setObjectName("checkBox_4")
        self.label_2 = QtWidgets.QLabel(self)
        self.label_2.setGeometry(QtCore.QRect(440, 120, 31, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setGeometry(QtCore.QRect(330, 170, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.pushButton.setObjectName("pushButton")
        self.label_3 = QtWidgets.QLabel(self)
        self.label_3.setGeometry(QtCore.QRect(16, 170, 250, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self)
        self.label_4.setGeometry(QtCore.QRect(16, 210, 350, 41))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: rgb(255, 255, 255);")
        self.label_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Dialog", "Dialog"))
        self.lineEdit.setText(_translate("Dialog", "Какой-то пароль..."))
        self.checkBox.setText(_translate("Dialog", "Латиница"))
        self.checkBox_2.setText(_translate("Dialog", "Кирилица"))
        self.checkBox_3.setText(_translate("Dialog", "Цифры"))
        self.label.setText(_translate("Dialog", "Длина пароля:"))
        self.checkBox_4.setText(_translate("Dialog", "Спец. символы"))
        self.label_2.setText(_translate("Dialog", "0"))
        self.pushButton.setText(_translate("Dialog", "Сгенерировать"))
        self.label_3.setText(_translate("Dialog", "Время подбора(10 000 000 п/с):"))
        self.label_4.setText(_translate("Dialog", "0с"))
        
        self.pushButton.clicked.connect(self.SetPassword)
        self.horizontalSlider.valueChanged.connect(self.SetLenght)

    def GeneratePassword(self):
        latin = ["a", "b", "c", "d", "e", 
                "f", "g", "h", "i", "j", 
                "k", "l", "m", "n", "o", 
                "p", "q", "r", "s", "t", 
                "u", "v", "w", "x", "y", 
                "z", "A", "B", "C", "D", 
                "E", "F", "G", "H", "I", 
                "J", "K", "L", "M", "N", 
                "O", "P", "Q", "R", "S", 
                "T", "U", "V", "W", "X", 
                "Y", "Z"]
        cyrillic = ["а", "б", "в", "г", "д", 
                    "е", "ё", "ж", "з", "и", 
                    "й", "к", "л", "м", "н", 
                    "о", "п", "р", "с", "т", 
                    "у", "ф", "х", "ц", "ч", 
                    "ш", "щ", "ъ", "ы", "ь", 
                    "э", "ю", "я", "А", "Б", 
                    "В", "Г", "Д", "Е", "Ё", 
                    "Ж", "З", "И", "Й", "К", 
                    "Л", "М", "Н", "О", "П", 
                    "Р", "С", "Т", "У", "Ф", 
                    "Х", "Ц", "Ч", "Ш", "Щ", 
                    "Ъ", "Ы", "Ь", "Э", "Ю", 
                    "Я"]
        nums = [str(i) for i in range(10)]
        spec = ["=", "-", "+", "_", ")", "(", "*", "&", "|", "^", "?", "%", "$", "#", "@", "!", ",", ".", "\\", "/", "\"", ":", ";", "]", "[", "{", "}", "<", ">", "~", "`", "'"]
        
        symbols = []
        if self.checkBox.isChecked():
            symbols.append(latin)
        if self.checkBox_2.isChecked():
            symbols.append(cyrillic)
        if self.checkBox_3.isChecked():
            symbols.append(nums)
        if self.checkBox_4.isChecked():
            symbols.append(spec)
        
        if symbols == []:
            return "Выберите символы =>"
        if int(self.label_2.text()) == 0:
            return "Выберите длинну пароля \/"
        Sequence = ""
        while len(Sequence) != int(self.label_2.text()):
            S = random.choice(symbols)
            Sequence += random.choice(S)
        
        self.SetTime(sum([len(i) for i in symbols]))
        return Sequence

    def SetPassword(self):
        _translate = QtCore.QCoreApplication.translate
        self.lineEdit.setText(_translate("Dialog", "Новый пароль"))
        self.lineEdit.setText(_translate("Dialog", self.GeneratePassword()))

    def SetLenght(self):
        _translate = QtCore.QCoreApplication.translate
        self.label_2.setText(_translate("Dialog", str(self.horizontalSlider.value())))

    def SetTime(self, symbolsCoint):
        _translate = QtCore.QCoreApplication.translate
        seconds = (symbolsCoint**self.horizontalSlider.value())//10_000_000
        if seconds//60//60//24//365 >= 7_500_000_000:
            answer = "Поверь, к этому моменту твой пароль уже никому не понадобится"
        elif seconds == 0:
            answer = "1c"
        else:
            answer = str(seconds) + "c " if seconds < 60 else str(seconds//60) + "м " + str(seconds%60) + "с " if seconds//60 < 60 else str(seconds//60//60) + "ч " +  str(seconds//60%60) + "м " + str(seconds%60) + "с " if seconds//60//60 < 24 else str(seconds//60//60//24) + "д " +  str(seconds//60//60%24) + "ч " +  str(seconds//60%60) + "м " + str(seconds%60) + "с " if seconds//60//60//24 < 365 else str(seconds//60//60//24//365) + "л " + str(seconds//60//60//24%365) + "д " +  str(seconds//60//60%24) + "ч " +  str(seconds//60%60) + "м " + str(seconds%60) + "с " 
        self.label_4.setText(_translate("Dialog", answer))

if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = Ui_Dialog()
    ex.show()
    sys.exit(app.exec_())